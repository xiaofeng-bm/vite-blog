import{_ as s,o as n,c as a,a as l}from"./app.71119768.js";const C='{"title":"145.\u4E8C\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386","description":"","frontmatter":{"title":"145.\u4E8C\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386"},"headers":[{"level":2,"title":"\u5206\u6790","slug":"\u5206\u6790"},{"level":2,"title":"\u5B9E\u73B0\u4EE3\u7801","slug":"\u5B9E\u73B0\u4EE3\u7801"}],"relativePath":"leetcode/hard/145.\u4E8C\u53C9\u6811\u7684\u540E\u5E8F\u904D\u5386.md"}',p={},o=l(`<p><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/" target="_blank" rel="noopener noreferrer">\u539F\u9898\u5730\u5740</a></p><p>\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\uFF0C\u8FD4\u56DE\u5B83\u7684 \u540E\u5E8F \u904D\u5386\u3002</p><p>\u793A\u4F8B:</p><div class="language-md"><pre><code><span class="line"><span style="color:#A6ACCD;">\u8F93\u5165: </span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">1,null,2,3</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">   1</span></span>
<span class="line"><span style="color:#A6ACCD;">    \\</span></span>
<span class="line"><span style="color:#A6ACCD;">     2</span></span>
<span class="line"><span style="color:#A6ACCD;">    /</span></span>
<span class="line"><span style="color:#A6ACCD;">   3 </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">\u8F93\u51FA: </span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">3,2,1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>\u8FDB\u9636: \u9012\u5F52\u7B97\u6CD5\u5F88\u7B80\u5355\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u8FED\u4EE3\u7B97\u6CD5\u5B8C\u6210\u5417\uFF1F</p><h2 id="\u5206\u6790" tabindex="-1">\u5206\u6790 <a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a></h2><p>\u770B\u8FD9\u9898\u4E4B\u524D\u5148\u786E\u4FDD\u4F60\u7406\u89E3\u4E86<a href="./../medium/144.\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386.html">144.\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386</a>\u8FD9\u9053\u9898\uFF0C\u5E76\u4E14\u660E\u767D\u4EC0\u4E48\u662F<code>\u524D\u5E8F\u904D\u5386</code>\uFF0C\u4EC0\u4E48\u662F<code>\u540E\u5E8F\u904D\u5386</code></p><p>\u5B9E\u73B0\u7684\u5957\u8DEF\u548C144\u90A3\u9053\u9898\u51E0\u4E4E\u5DEE\u4E0D\u591A\uFF0C\u5C31\u662F\u6CE8\u610F\u4E00\u4E0B\u987A\u5E8F</p><h2 id="\u5B9E\u73B0\u4EE3\u7801" tabindex="-1">\u5B9E\u73B0\u4EE3\u7801 <a class="header-anchor" href="#\u5B9E\u73B0\u4EE3\u7801" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Definition for a binary tree node.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * function TreeNode(val) {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *     this.val = val;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *     this.left = this.right = null;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">TreeNode</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">root</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">return</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number[]</span><span style="color:#89DDFF;font-style:italic;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> postorderTraversal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// \u7ED3\u679C\u6570\u7EC4</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// \u8FB9\u754C\u6761\u4EF6\u5224\u65AD</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// \u8C03\u7528\u6808</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stack</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// \u6839\u8282\u70B9\u5165\u6808</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// \u6808\u5C3E\u5143\u7D20\u51FA\u6808</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">cur</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// \u548C144\u9898\u7684\u533A\u522B\u662F,\u4E0D\u5728push\u8FDB\u5C3E\u90E8,\u800C\u662F\u653E\u5230\u5934\u90E8</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">unshift</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// \u6CE8\u610F\uFF1A\u4E0A\u9762\u662F\u4ECE\u5934\u90E8\u63D2\u5165\u3002\u6240\u4EE5\u5165\u6808\u7684\u65F6\u5019\u8981\u5DE6\u5B50\u6811\u5148\u5165</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">stack</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u6267\u884C\u7528\u65F6\uFF1A88 ms, \u5728\u6240\u6709 JavaScript \u63D0\u4EA4\u4E2D\u51FB\u8D25\u4E868.77%\u7684\u7528\u6237</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u5185\u5B58\u6D88\u8017\uFF1A37.7 MB, \u5728\u6240\u6709 JavaScript \u63D0\u4EA4\u4E2D\u51FB\u8D25\u4E866.67%\u7684\u7528\u6237</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u65F6\u95F4\u590D\u6742\u5EA6\uFF1AOn</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AOn</span></span>
<span class="line"></span></code></pre></div>`,10),t=[o];function e(c,r,y,i,F,D){return n(),a("div",null,t)}var f=s(p,[["render",e]]);export{C as __pageData,f as default};
